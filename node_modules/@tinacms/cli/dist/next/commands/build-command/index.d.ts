import { Command } from 'clipanion';
import { Database } from '@tinacms/graphql';
import { ConfigManager } from '../../config-manager';
export declare class BuildCommand extends Command {
    static paths: string[][];
    rootPath: string;
    verbose: boolean;
    noSDK: boolean;
    datalayerPort: string;
    isomorphicGitBridge: boolean;
    localOption: boolean;
    experimentalDataLayer: boolean;
    noTelemetry: boolean;
    tinaGraphQLVersion: string;
    static usage: import("clipanion").Usage;
    catch(error: any): Promise<void>;
    execute(): Promise<number | void>;
    checkClientInfo(configManager: ConfigManager, apiURL: string): Promise<void>;
    checkGraphqlSchema(configManager: ConfigManager, database: Database, apiURL: string): Promise<void>;
}
export declare const fetchRemoteGraphqlSchema: ({ url, token, }: {
    url: string;
    token?: string;
}) => Promise<any>;
