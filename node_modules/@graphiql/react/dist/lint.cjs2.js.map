{"version":3,"file":"lint.cjs2.js","sources":["../../codemirror-graphql/esm/utils/jsonParse.js","../../codemirror-graphql/esm/variables/lint.js"],"sourcesContent":["export default function jsonParse(str) {\n    string = str;\n    strLen = str.length;\n    start = end = lastEnd = -1;\n    ch();\n    lex();\n    const ast = parseObj();\n    expect('EOF');\n    return ast;\n}\nlet string;\nlet strLen;\nlet start;\nlet end;\nlet lastEnd;\nlet code;\nlet kind;\nfunction parseObj() {\n    const nodeStart = start;\n    const members = [];\n    expect('{');\n    if (!skip('}')) {\n        do {\n            members.push(parseMember());\n        } while (skip(','));\n        expect('}');\n    }\n    return {\n        kind: 'Object',\n        start: nodeStart,\n        end: lastEnd,\n        members,\n    };\n}\nfunction parseMember() {\n    const nodeStart = start;\n    const key = kind === 'String' ? curToken() : null;\n    expect('String');\n    expect(':');\n    const value = parseVal();\n    return {\n        kind: 'Member',\n        start: nodeStart,\n        end: lastEnd,\n        key,\n        value,\n    };\n}\nfunction parseArr() {\n    const nodeStart = start;\n    const values = [];\n    expect('[');\n    if (!skip(']')) {\n        do {\n            values.push(parseVal());\n        } while (skip(','));\n        expect(']');\n    }\n    return {\n        kind: 'Array',\n        start: nodeStart,\n        end: lastEnd,\n        values,\n    };\n}\nfunction parseVal() {\n    switch (kind) {\n        case '[':\n            return parseArr();\n        case '{':\n            return parseObj();\n        case 'String':\n        case 'Number':\n        case 'Boolean':\n        case 'Null':\n            const token = curToken();\n            lex();\n            return token;\n    }\n    expect('Value');\n}\nfunction curToken() {\n    return { kind, start, end, value: JSON.parse(string.slice(start, end)) };\n}\nfunction expect(str) {\n    if (kind === str) {\n        lex();\n        return;\n    }\n    let found;\n    if (kind === 'EOF') {\n        found = '[end of file]';\n    }\n    else if (end - start > 1) {\n        found = '`' + string.slice(start, end) + '`';\n    }\n    else {\n        const match = string.slice(start).match(/^.+?\\b/);\n        found = '`' + (match ? match[0] : string[start]) + '`';\n    }\n    throw syntaxError(`Expected ${str} but found ${found}.`);\n}\nexport class JSONSyntaxError extends Error {\n    constructor(message, position) {\n        super(message);\n        this.position = position;\n    }\n}\nfunction syntaxError(message) {\n    return new JSONSyntaxError(message, { start, end });\n}\nfunction skip(k) {\n    if (kind === k) {\n        lex();\n        return true;\n    }\n}\nfunction ch() {\n    if (end < strLen) {\n        end++;\n        code = end === strLen ? 0 : string.charCodeAt(end);\n    }\n    return code;\n}\nfunction lex() {\n    lastEnd = end;\n    while (code === 9 || code === 10 || code === 13 || code === 32) {\n        ch();\n    }\n    if (code === 0) {\n        kind = 'EOF';\n        return;\n    }\n    start = end;\n    switch (code) {\n        case 34:\n            kind = 'String';\n            return readString();\n        case 45:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            kind = 'Number';\n            return readNumber();\n        case 102:\n            if (string.slice(start, start + 5) !== 'false') {\n                break;\n            }\n            end += 4;\n            ch();\n            kind = 'Boolean';\n            return;\n        case 110:\n            if (string.slice(start, start + 4) !== 'null') {\n                break;\n            }\n            end += 3;\n            ch();\n            kind = 'Null';\n            return;\n        case 116:\n            if (string.slice(start, start + 4) !== 'true') {\n                break;\n            }\n            end += 3;\n            ch();\n            kind = 'Boolean';\n            return;\n    }\n    kind = string[start];\n    ch();\n}\nfunction readString() {\n    ch();\n    while (code !== 34 && code > 31) {\n        if (code === 92) {\n            code = ch();\n            switch (code) {\n                case 34:\n                case 47:\n                case 92:\n                case 98:\n                case 102:\n                case 110:\n                case 114:\n                case 116:\n                    ch();\n                    break;\n                case 117:\n                    ch();\n                    readHex();\n                    readHex();\n                    readHex();\n                    readHex();\n                    break;\n                default:\n                    throw syntaxError('Bad character escape sequence.');\n            }\n        }\n        else if (end === strLen) {\n            throw syntaxError('Unterminated string.');\n        }\n        else {\n            ch();\n        }\n    }\n    if (code === 34) {\n        ch();\n        return;\n    }\n    throw syntaxError('Unterminated string.');\n}\nfunction readHex() {\n    if ((code >= 48 && code <= 57) ||\n        (code >= 65 && code <= 70) ||\n        (code >= 97 && code <= 102)) {\n        return ch();\n    }\n    throw syntaxError('Expected hexadecimal digit.');\n}\nfunction readNumber() {\n    if (code === 45) {\n        ch();\n    }\n    if (code === 48) {\n        ch();\n    }\n    else {\n        readDigits();\n    }\n    if (code === 46) {\n        ch();\n        readDigits();\n    }\n    if (code === 69 || code === 101) {\n        code = ch();\n        if (code === 43 || code === 45) {\n            ch();\n        }\n        readDigits();\n    }\n}\nfunction readDigits() {\n    if (code < 48 || code > 57) {\n        throw syntaxError('Expected decimal digit.');\n    }\n    do {\n        ch();\n    } while (code >= 48 && code <= 57);\n}\n//# sourceMappingURL=jsonParse.js.map","import CodeMirror from 'codemirror';\nimport { GraphQLEnumType, GraphQLInputObjectType, GraphQLList, GraphQLNonNull, GraphQLScalarType, } from 'graphql';\nimport jsonParse, { JSONSyntaxError, } from '../utils/jsonParse';\nCodeMirror.registerHelper('lint', 'graphql-variables', (text, options, editor) => {\n    if (!text) {\n        return [];\n    }\n    let ast;\n    try {\n        ast = jsonParse(text);\n    }\n    catch (error) {\n        if (error instanceof JSONSyntaxError) {\n            return [lintError(editor, error.position, error.message)];\n        }\n        throw error;\n    }\n    const { variableToType } = options;\n    if (!variableToType) {\n        return [];\n    }\n    return validateVariables(editor, variableToType, ast);\n});\nfunction validateVariables(editor, variableToType, variablesAST) {\n    const errors = [];\n    variablesAST.members.forEach(member => {\n        var _a;\n        if (member) {\n            const variableName = (_a = member.key) === null || _a === void 0 ? void 0 : _a.value;\n            const type = variableToType[variableName];\n            if (type) {\n                validateValue(type, member.value).forEach(([node, message]) => {\n                    errors.push(lintError(editor, node, message));\n                });\n            }\n            else {\n                errors.push(lintError(editor, member.key, `Variable \"$${variableName}\" does not appear in any GraphQL query.`));\n            }\n        }\n    });\n    return errors;\n}\nfunction validateValue(type, valueAST) {\n    if (!type || !valueAST) {\n        return [];\n    }\n    if (type instanceof GraphQLNonNull) {\n        if (valueAST.kind === 'Null') {\n            return [[valueAST, `Type \"${type}\" is non-nullable and cannot be null.`]];\n        }\n        return validateValue(type.ofType, valueAST);\n    }\n    if (valueAST.kind === 'Null') {\n        return [];\n    }\n    if (type instanceof GraphQLList) {\n        const itemType = type.ofType;\n        if (valueAST.kind === 'Array') {\n            const values = valueAST.values || [];\n            return mapCat(values, item => validateValue(itemType, item));\n        }\n        return validateValue(itemType, valueAST);\n    }\n    if (type instanceof GraphQLInputObjectType) {\n        if (valueAST.kind !== 'Object') {\n            return [[valueAST, `Type \"${type}\" must be an Object.`]];\n        }\n        const providedFields = Object.create(null);\n        const fieldErrors = mapCat(valueAST.members, member => {\n            var _a;\n            const fieldName = (_a = member === null || member === void 0 ? void 0 : member.key) === null || _a === void 0 ? void 0 : _a.value;\n            providedFields[fieldName] = true;\n            const inputField = type.getFields()[fieldName];\n            if (!inputField) {\n                return [\n                    [\n                        member.key,\n                        `Type \"${type}\" does not have a field \"${fieldName}\".`,\n                    ],\n                ];\n            }\n            const fieldType = inputField ? inputField.type : undefined;\n            return validateValue(fieldType, member.value);\n        });\n        Object.keys(type.getFields()).forEach(fieldName => {\n            const field = type.getFields()[fieldName];\n            if (!providedFields[fieldName] &&\n                field.type instanceof GraphQLNonNull &&\n                !field.defaultValue) {\n                fieldErrors.push([\n                    valueAST,\n                    `Object of type \"${type}\" is missing required field \"${fieldName}\".`,\n                ]);\n            }\n        });\n        return fieldErrors;\n    }\n    if ((type.name === 'Boolean' && valueAST.kind !== 'Boolean') ||\n        (type.name === 'String' && valueAST.kind !== 'String') ||\n        (type.name === 'ID' &&\n            valueAST.kind !== 'Number' &&\n            valueAST.kind !== 'String') ||\n        (type.name === 'Float' && valueAST.kind !== 'Number') ||\n        (type.name === 'Int' &&\n            (valueAST.kind !== 'Number' || (valueAST.value | 0) !== valueAST.value))) {\n        return [[valueAST, `Expected value of type \"${type}\".`]];\n    }\n    if ((type instanceof GraphQLEnumType || type instanceof GraphQLScalarType) &&\n        ((valueAST.kind !== 'String' &&\n            valueAST.kind !== 'Number' &&\n            valueAST.kind !== 'Boolean' &&\n            valueAST.kind !== 'Null') ||\n            isNullish(type.parseValue(valueAST.value)))) {\n        return [[valueAST, `Expected value of type \"${type}\".`]];\n    }\n    return [];\n}\nfunction lintError(editor, node, message) {\n    return {\n        message,\n        severity: 'error',\n        type: 'validation',\n        from: editor.posFromIndex(node.start),\n        to: editor.posFromIndex(node.end),\n    };\n}\nfunction isNullish(value) {\n    return value === null || value === undefined || value !== value;\n}\nfunction mapCat(array, mapper) {\n    return Array.prototype.concat.apply([], array.map(mapper));\n}\n//# sourceMappingURL=lint.js.map"],"names":["CodeMirror","GraphQLNonNull","GraphQLList","GraphQLInputObjectType","GraphQLEnumType","GraphQLScalarType"],"mappings":"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"}