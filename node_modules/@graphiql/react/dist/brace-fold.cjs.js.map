{"version":3,"file":"brace-fold.cjs.js","sources":["../../../node_modules/codemirror/addon/fold/brace-fold.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nfunction bracketFolding(pairs) {\n  return function(cm, start) {\n    var line = start.line, lineText = cm.getLine(line);\n\n    function findOpening(pair) {\n      var tokenType;\n      for (var at = start.ch, pass = 0;;) {\n        var found = at <= 0 ? -1 : lineText.lastIndexOf(pair[0], at - 1);\n        if (found == -1) {\n          if (pass == 1) break;\n          pass = 1;\n          at = lineText.length;\n          continue;\n        }\n        if (pass == 1 && found < start.ch) break;\n        tokenType = cm.getTokenTypeAt(CodeMirror.Pos(line, found + 1));\n        if (!/^(comment|string)/.test(tokenType)) return {ch: found + 1, tokenType: tokenType, pair: pair};\n        at = found - 1;\n      }\n    }\n\n    function findRange(found) {\n      var count = 1, lastLine = cm.lastLine(), end, startCh = found.ch, endCh\n      outer: for (var i = line; i <= lastLine; ++i) {\n        var text = cm.getLine(i), pos = i == line ? startCh : 0;\n        for (;;) {\n          var nextOpen = text.indexOf(found.pair[0], pos), nextClose = text.indexOf(found.pair[1], pos);\n          if (nextOpen < 0) nextOpen = text.length;\n          if (nextClose < 0) nextClose = text.length;\n          pos = Math.min(nextOpen, nextClose);\n          if (pos == text.length) break;\n          if (cm.getTokenTypeAt(CodeMirror.Pos(i, pos + 1)) == found.tokenType) {\n            if (pos == nextOpen) ++count;\n            else if (!--count) { end = i; endCh = pos; break outer; }\n          }\n          ++pos;\n        }\n      }\n\n      if (end == null || line == end) return null\n      return {from: CodeMirror.Pos(line, startCh),\n              to: CodeMirror.Pos(end, endCh)};\n    }\n\n    var found = []\n    for (var i = 0; i < pairs.length; i++) {\n      var open = findOpening(pairs[i])\n      if (open) found.push(open)\n    }\n    found.sort(function(a, b) { return a.ch - b.ch })\n    for (var i = 0; i < found.length; i++) {\n      var range = findRange(found[i])\n      if (range) return range\n    }\n    return null\n  }\n}\n\nCodeMirror.registerHelper(\"fold\", \"brace\", bracketFolding([[\"{\", \"}\"], [\"[\", \"]\"]]));\n\nCodeMirror.registerHelper(\"fold\", \"brace-paren\", bracketFolding([[\"{\", \"}\"], [\"[\", \"]\"], [\"(\", \")\"]]));\n\nCodeMirror.registerHelper(\"fold\", \"import\", function(cm, start) {\n  function hasImport(line) {\n    if (line < cm.firstLine() || line > cm.lastLine()) return null;\n    var start = cm.getTokenAt(CodeMirror.Pos(line, 1));\n    if (!/\\S/.test(start.string)) start = cm.getTokenAt(CodeMirror.Pos(line, start.end + 1));\n    if (start.type != \"keyword\" || start.string != \"import\") return null;\n    // Now find closing semicolon, return its position\n    for (var i = line, e = Math.min(cm.lastLine(), line + 10); i <= e; ++i) {\n      var text = cm.getLine(i), semi = text.indexOf(\";\");\n      if (semi != -1) return {startCh: start.end, end: CodeMirror.Pos(i, semi)};\n    }\n  }\n\n  var startLine = start.line, has = hasImport(startLine), prev;\n  if (!has || hasImport(startLine - 1) || ((prev = hasImport(startLine - 2)) && prev.end.line == startLine - 1))\n    return null;\n  for (var end = has.end;;) {\n    var next = hasImport(end.line + 1);\n    if (next == null) break;\n    end = next.end;\n  }\n  return {from: cm.clipPos(CodeMirror.Pos(startLine, has.startCh + 1)), to: end};\n});\n\nCodeMirror.registerHelper(\"fold\", \"include\", function(cm, start) {\n  function hasInclude(line) {\n    if (line < cm.firstLine() || line > cm.lastLine()) return null;\n    var start = cm.getTokenAt(CodeMirror.Pos(line, 1));\n    if (!/\\S/.test(start.string)) start = cm.getTokenAt(CodeMirror.Pos(line, start.end + 1));\n    if (start.type == \"meta\" && start.string.slice(0, 8) == \"#include\") return start.start + 8;\n  }\n\n  var startLine = start.line, has = hasInclude(startLine);\n  if (has == null || hasInclude(startLine - 1) != null) return null;\n  for (var end = startLine;;) {\n    var next = hasInclude(end + 1);\n    if (next == null) break;\n    ++end;\n  }\n  return {from: CodeMirror.Pos(startLine, has + 1),\n          to: cm.clipPos(CodeMirror.Pos(end))};\n});\n\n});\n"],"names":["require$$0"],"mappings":"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"}