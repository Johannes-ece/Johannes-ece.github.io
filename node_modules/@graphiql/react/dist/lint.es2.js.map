{"version":3,"file":"lint.es2.js","sources":["../../codemirror-graphql/esm/utils/jsonParse.js","../../codemirror-graphql/esm/variables/lint.js"],"sourcesContent":["export default function jsonParse(str) {\n    string = str;\n    strLen = str.length;\n    start = end = lastEnd = -1;\n    ch();\n    lex();\n    const ast = parseObj();\n    expect('EOF');\n    return ast;\n}\nlet string;\nlet strLen;\nlet start;\nlet end;\nlet lastEnd;\nlet code;\nlet kind;\nfunction parseObj() {\n    const nodeStart = start;\n    const members = [];\n    expect('{');\n    if (!skip('}')) {\n        do {\n            members.push(parseMember());\n        } while (skip(','));\n        expect('}');\n    }\n    return {\n        kind: 'Object',\n        start: nodeStart,\n        end: lastEnd,\n        members,\n    };\n}\nfunction parseMember() {\n    const nodeStart = start;\n    const key = kind === 'String' ? curToken() : null;\n    expect('String');\n    expect(':');\n    const value = parseVal();\n    return {\n        kind: 'Member',\n        start: nodeStart,\n        end: lastEnd,\n        key,\n        value,\n    };\n}\nfunction parseArr() {\n    const nodeStart = start;\n    const values = [];\n    expect('[');\n    if (!skip(']')) {\n        do {\n            values.push(parseVal());\n        } while (skip(','));\n        expect(']');\n    }\n    return {\n        kind: 'Array',\n        start: nodeStart,\n        end: lastEnd,\n        values,\n    };\n}\nfunction parseVal() {\n    switch (kind) {\n        case '[':\n            return parseArr();\n        case '{':\n            return parseObj();\n        case 'String':\n        case 'Number':\n        case 'Boolean':\n        case 'Null':\n            const token = curToken();\n            lex();\n            return token;\n    }\n    expect('Value');\n}\nfunction curToken() {\n    return { kind, start, end, value: JSON.parse(string.slice(start, end)) };\n}\nfunction expect(str) {\n    if (kind === str) {\n        lex();\n        return;\n    }\n    let found;\n    if (kind === 'EOF') {\n        found = '[end of file]';\n    }\n    else if (end - start > 1) {\n        found = '`' + string.slice(start, end) + '`';\n    }\n    else {\n        const match = string.slice(start).match(/^.+?\\b/);\n        found = '`' + (match ? match[0] : string[start]) + '`';\n    }\n    throw syntaxError(`Expected ${str} but found ${found}.`);\n}\nexport class JSONSyntaxError extends Error {\n    constructor(message, position) {\n        super(message);\n        this.position = position;\n    }\n}\nfunction syntaxError(message) {\n    return new JSONSyntaxError(message, { start, end });\n}\nfunction skip(k) {\n    if (kind === k) {\n        lex();\n        return true;\n    }\n}\nfunction ch() {\n    if (end < strLen) {\n        end++;\n        code = end === strLen ? 0 : string.charCodeAt(end);\n    }\n    return code;\n}\nfunction lex() {\n    lastEnd = end;\n    while (code === 9 || code === 10 || code === 13 || code === 32) {\n        ch();\n    }\n    if (code === 0) {\n        kind = 'EOF';\n        return;\n    }\n    start = end;\n    switch (code) {\n        case 34:\n            kind = 'String';\n            return readString();\n        case 45:\n        case 48:\n        case 49:\n        case 50:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 56:\n        case 57:\n            kind = 'Number';\n            return readNumber();\n        case 102:\n            if (string.slice(start, start + 5) !== 'false') {\n                break;\n            }\n            end += 4;\n            ch();\n            kind = 'Boolean';\n            return;\n        case 110:\n            if (string.slice(start, start + 4) !== 'null') {\n                break;\n            }\n            end += 3;\n            ch();\n            kind = 'Null';\n            return;\n        case 116:\n            if (string.slice(start, start + 4) !== 'true') {\n                break;\n            }\n            end += 3;\n            ch();\n            kind = 'Boolean';\n            return;\n    }\n    kind = string[start];\n    ch();\n}\nfunction readString() {\n    ch();\n    while (code !== 34 && code > 31) {\n        if (code === 92) {\n            code = ch();\n            switch (code) {\n                case 34:\n                case 47:\n                case 92:\n                case 98:\n                case 102:\n                case 110:\n                case 114:\n                case 116:\n                    ch();\n                    break;\n                case 117:\n                    ch();\n                    readHex();\n                    readHex();\n                    readHex();\n                    readHex();\n                    break;\n                default:\n                    throw syntaxError('Bad character escape sequence.');\n            }\n        }\n        else if (end === strLen) {\n            throw syntaxError('Unterminated string.');\n        }\n        else {\n            ch();\n        }\n    }\n    if (code === 34) {\n        ch();\n        return;\n    }\n    throw syntaxError('Unterminated string.');\n}\nfunction readHex() {\n    if ((code >= 48 && code <= 57) ||\n        (code >= 65 && code <= 70) ||\n        (code >= 97 && code <= 102)) {\n        return ch();\n    }\n    throw syntaxError('Expected hexadecimal digit.');\n}\nfunction readNumber() {\n    if (code === 45) {\n        ch();\n    }\n    if (code === 48) {\n        ch();\n    }\n    else {\n        readDigits();\n    }\n    if (code === 46) {\n        ch();\n        readDigits();\n    }\n    if (code === 69 || code === 101) {\n        code = ch();\n        if (code === 43 || code === 45) {\n            ch();\n        }\n        readDigits();\n    }\n}\nfunction readDigits() {\n    if (code < 48 || code > 57) {\n        throw syntaxError('Expected decimal digit.');\n    }\n    do {\n        ch();\n    } while (code >= 48 && code <= 57);\n}\n//# sourceMappingURL=jsonParse.js.map","import CodeMirror from 'codemirror';\nimport { GraphQLEnumType, GraphQLInputObjectType, GraphQLList, GraphQLNonNull, GraphQLScalarType, } from 'graphql';\nimport jsonParse, { JSONSyntaxError, } from '../utils/jsonParse';\nCodeMirror.registerHelper('lint', 'graphql-variables', (text, options, editor) => {\n    if (!text) {\n        return [];\n    }\n    let ast;\n    try {\n        ast = jsonParse(text);\n    }\n    catch (error) {\n        if (error instanceof JSONSyntaxError) {\n            return [lintError(editor, error.position, error.message)];\n        }\n        throw error;\n    }\n    const { variableToType } = options;\n    if (!variableToType) {\n        return [];\n    }\n    return validateVariables(editor, variableToType, ast);\n});\nfunction validateVariables(editor, variableToType, variablesAST) {\n    const errors = [];\n    variablesAST.members.forEach(member => {\n        var _a;\n        if (member) {\n            const variableName = (_a = member.key) === null || _a === void 0 ? void 0 : _a.value;\n            const type = variableToType[variableName];\n            if (type) {\n                validateValue(type, member.value).forEach(([node, message]) => {\n                    errors.push(lintError(editor, node, message));\n                });\n            }\n            else {\n                errors.push(lintError(editor, member.key, `Variable \"$${variableName}\" does not appear in any GraphQL query.`));\n            }\n        }\n    });\n    return errors;\n}\nfunction validateValue(type, valueAST) {\n    if (!type || !valueAST) {\n        return [];\n    }\n    if (type instanceof GraphQLNonNull) {\n        if (valueAST.kind === 'Null') {\n            return [[valueAST, `Type \"${type}\" is non-nullable and cannot be null.`]];\n        }\n        return validateValue(type.ofType, valueAST);\n    }\n    if (valueAST.kind === 'Null') {\n        return [];\n    }\n    if (type instanceof GraphQLList) {\n        const itemType = type.ofType;\n        if (valueAST.kind === 'Array') {\n            const values = valueAST.values || [];\n            return mapCat(values, item => validateValue(itemType, item));\n        }\n        return validateValue(itemType, valueAST);\n    }\n    if (type instanceof GraphQLInputObjectType) {\n        if (valueAST.kind !== 'Object') {\n            return [[valueAST, `Type \"${type}\" must be an Object.`]];\n        }\n        const providedFields = Object.create(null);\n        const fieldErrors = mapCat(valueAST.members, member => {\n            var _a;\n            const fieldName = (_a = member === null || member === void 0 ? void 0 : member.key) === null || _a === void 0 ? void 0 : _a.value;\n            providedFields[fieldName] = true;\n            const inputField = type.getFields()[fieldName];\n            if (!inputField) {\n                return [\n                    [\n                        member.key,\n                        `Type \"${type}\" does not have a field \"${fieldName}\".`,\n                    ],\n                ];\n            }\n            const fieldType = inputField ? inputField.type : undefined;\n            return validateValue(fieldType, member.value);\n        });\n        Object.keys(type.getFields()).forEach(fieldName => {\n            const field = type.getFields()[fieldName];\n            if (!providedFields[fieldName] &&\n                field.type instanceof GraphQLNonNull &&\n                !field.defaultValue) {\n                fieldErrors.push([\n                    valueAST,\n                    `Object of type \"${type}\" is missing required field \"${fieldName}\".`,\n                ]);\n            }\n        });\n        return fieldErrors;\n    }\n    if ((type.name === 'Boolean' && valueAST.kind !== 'Boolean') ||\n        (type.name === 'String' && valueAST.kind !== 'String') ||\n        (type.name === 'ID' &&\n            valueAST.kind !== 'Number' &&\n            valueAST.kind !== 'String') ||\n        (type.name === 'Float' && valueAST.kind !== 'Number') ||\n        (type.name === 'Int' &&\n            (valueAST.kind !== 'Number' || (valueAST.value | 0) !== valueAST.value))) {\n        return [[valueAST, `Expected value of type \"${type}\".`]];\n    }\n    if ((type instanceof GraphQLEnumType || type instanceof GraphQLScalarType) &&\n        ((valueAST.kind !== 'String' &&\n            valueAST.kind !== 'Number' &&\n            valueAST.kind !== 'Boolean' &&\n            valueAST.kind !== 'Null') ||\n            isNullish(type.parseValue(valueAST.value)))) {\n        return [[valueAST, `Expected value of type \"${type}\".`]];\n    }\n    return [];\n}\nfunction lintError(editor, node, message) {\n    return {\n        message,\n        severity: 'error',\n        type: 'validation',\n        from: editor.posFromIndex(node.start),\n        to: editor.posFromIndex(node.end),\n    };\n}\nfunction isNullish(value) {\n    return value === null || value === undefined || value !== value;\n}\nfunction mapCat(array, mapper) {\n    return Array.prototype.concat.apply([], array.map(mapper));\n}\n//# sourceMappingURL=lint.js.map"],"names":[],"mappings":";;;;;;;AAAe,mBAAmB,KAAK;AACnC,WAAS;AACT,WAAS,IAAI;AACb,UAAQ,MAAM,UAAU;AACxB;AACA;AACA,QAAM,MAAM;AACZ,SAAO,KAAK;AACZ,SAAO;AACX;AATwB;AAUxB,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,IAAI;AACJ,oBAAoB;AAChB,QAAM,YAAY;AAClB,QAAM,UAAU,CAAA;AAChB,SAAO,GAAG;AACV,MAAI,CAAC,KAAK,GAAG,GAAG;AACZ,OAAG;AACC,cAAQ,KAAK,YAAW,CAAE;AAAA,IACtC,SAAiB,KAAK,GAAG;AACjB,WAAO,GAAG;AAAA,EACb;AACD,SAAO;AAAA,IACH,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,IACL;AAAA,EACR;AACA;AAhBS;AAiBT,uBAAuB;AACnB,QAAM,YAAY;AAClB,QAAM,MAAM,SAAS,WAAW,SAAQ,IAAK;AAC7C,SAAO,QAAQ;AACf,SAAO,GAAG;AACV,QAAM,QAAQ;AACd,SAAO;AAAA,IACH,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,IACL;AAAA,IACA;AAAA,EACR;AACA;AAbS;AAcT,oBAAoB;AAChB,QAAM,YAAY;AAClB,QAAM,SAAS,CAAA;AACf,SAAO,GAAG;AACV,MAAI,CAAC,KAAK,GAAG,GAAG;AACZ,OAAG;AACC,aAAO,KAAK,SAAQ,CAAE;AAAA,IAClC,SAAiB,KAAK,GAAG;AACjB,WAAO,GAAG;AAAA,EACb;AACD,SAAO;AAAA,IACH,MAAM;AAAA,IACN,OAAO;AAAA,IACP,KAAK;AAAA,IACL;AAAA,EACR;AACA;AAhBS;AAiBT,oBAAoB;AAChB,UAAQ;AAAA,SACC;AACD,aAAO,SAAQ;AAAA,SACd;AACD,aAAO,SAAQ;AAAA,SACd;AAAA,SACA;AAAA,SACA;AAAA,SACA;AACD,YAAM,QAAQ;AACd;AACA,aAAO;AAAA;AAEf,SAAO,OAAO;AAClB;AAfS;AAgBT,oBAAoB;AAChB,SAAO,EAAE,MAAM,OAAO,KAAK,OAAO,KAAK,MAAM,OAAO,MAAM,OAAO,GAAG,CAAC,EAAC;AAC1E;AAFS;AAGT,gBAAgB,KAAK;AACjB,MAAI,SAAS,KAAK;AACd;AACA;AAAA,EACH;AACD,MAAI;AACJ,MAAI,SAAS,OAAO;AAChB,YAAQ;AAAA,EACX,WACQ,MAAM,QAAQ,GAAG;AACtB,YAAQ,MAAM,OAAO,MAAM,OAAO,GAAG,IAAI;AAAA,EAC5C,OACI;AACD,UAAM,QAAQ,OAAO,MAAM,KAAK,EAAE,MAAM,QAAQ;AAChD,YAAQ,MAAO,SAAQ,MAAM,KAAK,OAAO,UAAU;AAAA,EACtD;AACD,QAAM,YAAY,YAAY,iBAAiB,QAAQ;AAC3D;AAjBS;AAkBF,MAAM,wBAAwB,MAAM;AAAA,EACvC,YAAY,SAAS,UAAU;AAC3B,UAAM,OAAO;AACb,SAAK,WAAW;AAAA,EACnB;AACL;AALO;AAMP,qBAAqB,SAAS;AAC1B,SAAO,IAAI,gBAAgB,SAAS,EAAE,OAAO,IAAK,CAAA;AACtD;AAFS;AAGT,cAAc,GAAG;AACb,MAAI,SAAS,GAAG;AACZ;AACA,WAAO;AAAA,EACV;AACL;AALS;AAMT,cAAc;AACV,MAAI,MAAM,QAAQ;AACd;AACA,WAAO,QAAQ,SAAS,IAAI,OAAO,WAAW,GAAG;AAAA,EACpD;AACD,SAAO;AACX;AANS;AAOT,eAAe;AACX,YAAU;AACV,SAAO,SAAS,KAAK,SAAS,MAAM,SAAS,MAAM,SAAS,IAAI;AAC5D;EACH;AACD,MAAI,SAAS,GAAG;AACZ,WAAO;AACP;AAAA,EACH;AACD,UAAQ;AACR,UAAQ;AAAA,SACC;AACD,aAAO;AACP,aAAO,WAAU;AAAA,SAChB;AAAA,SACA;AAAA,SACA;AAAA,SACA;AAAA,SACA;AAAA,SACA;AAAA,SACA;AAAA,SACA;AAAA,SACA;AAAA,SACA;AAAA,SACA;AACD,aAAO;AACP,aAAO,WAAU;AAAA,SAChB;AACD,UAAI,OAAO,MAAM,OAAO,QAAQ,CAAC,MAAM,SAAS;AAC5C;AAAA,MACH;AACD,aAAO;AACP;AACA,aAAO;AACP;AAAA,SACC;AACD,UAAI,OAAO,MAAM,OAAO,QAAQ,CAAC,MAAM,QAAQ;AAC3C;AAAA,MACH;AACD,aAAO;AACP;AACA,aAAO;AACP;AAAA,SACC;AACD,UAAI,OAAO,MAAM,OAAO,QAAQ,CAAC,MAAM,QAAQ;AAC3C;AAAA,MACH;AACD,aAAO;AACP;AACA,aAAO;AACP;AAAA;AAER,SAAO,OAAO;AACd;AACJ;AAtDS;AAuDT,sBAAsB;AAClB;AACA,SAAO,SAAS,MAAM,OAAO,IAAI;AAC7B,QAAI,SAAS,IAAI;AACb,aAAO,GAAE;AACT,cAAQ;AAAA,aACC;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AAAA,aACA;AACD;AACA;AAAA,aACC;AACD;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA,gBAAM,YAAY,gCAAgC;AAAA;AAAA,IAE7D,WACQ,QAAQ,QAAQ;AACrB,YAAM,YAAY,sBAAsB;AAAA,IAC3C,OACI;AACD;IACH;AAAA,EACJ;AACD,MAAI,SAAS,IAAI;AACb;AACA;AAAA,EACH;AACD,QAAM,YAAY,sBAAsB;AAC5C;AAvCS;AAwCT,mBAAmB;AACf,MAAK,QAAQ,MAAM,QAAQ,MACtB,QAAQ,MAAM,QAAQ,MACtB,QAAQ,MAAM,QAAQ,KAAM;AAC7B,WAAO,GAAE;AAAA,EACZ;AACD,QAAM,YAAY,6BAA6B;AACnD;AAPS;AAQT,sBAAsB;AAClB,MAAI,SAAS,IAAI;AACb;EACH;AACD,MAAI,SAAS,IAAI;AACb;EACH,OACI;AACD;EACH;AACD,MAAI,SAAS,IAAI;AACb;AACA;EACH;AACD,MAAI,SAAS,MAAM,SAAS,KAAK;AAC7B,WAAO,GAAE;AACT,QAAI,SAAS,MAAM,SAAS,IAAI;AAC5B;IACH;AACD;EACH;AACL;AArBS;AAsBT,sBAAsB;AAClB,MAAI,OAAO,MAAM,OAAO,IAAI;AACxB,UAAM,YAAY,yBAAyB;AAAA,EAC9C;AACD,KAAG;AACC;EACH,SAAQ,QAAQ,MAAM,QAAQ;AACnC;AAPS;ACtPT,WAAW,eAAe,QAAQ,qBAAqB,CAAC,MAAM,SAAS,WAAW;AAC9E,MAAI,CAAC,MAAM;AACP,WAAO;EACV;AACD,MAAI;AACJ,MAAI;AACA,UAAM,UAAU,IAAI;AAAA,EACvB,SACM,OAAP;AACI,QAAI,iBAAiB,iBAAiB;AAClC,aAAO,CAAC,UAAU,QAAQ,MAAM,UAAU,MAAM,OAAO,CAAC;AAAA,IAC3D;AACD,UAAM;AAAA,EACT;AACD,QAAM,EAAE,mBAAmB;AAC3B,MAAI,CAAC,gBAAgB;AACjB,WAAO;EACV;AACD,SAAO,kBAAkB,QAAQ,gBAAgB,GAAG;AACxD,CAAC;AACD,2BAA2B,QAAQ,gBAAgB,cAAc;AAC7D,QAAM,SAAS,CAAA;AACf,eAAa,QAAQ,QAAQ,YAAU;AACnC,QAAI;AACJ,QAAI,QAAQ;AACR,YAAM,eAAgB,MAAK,OAAO,SAAS,QAAQ,OAAO,SAAS,SAAS,GAAG;AAC/E,YAAM,OAAO,eAAe;AAC5B,UAAI,MAAM;AACN,sBAAc,MAAM,OAAO,KAAK,EAAE,QAAQ,CAAC,CAAC,MAAM,aAAa;AAC3D,iBAAO,KAAK,UAAU,QAAQ,MAAM,OAAO,CAAC;AAAA,QAChE,CAAiB;AAAA,MACJ,OACI;AACD,eAAO,KAAK,UAAU,QAAQ,OAAO,KAAK,cAAc,qDAAqD,CAAC;AAAA,MACjH;AAAA,IACJ;AAAA,EACT,CAAK;AACD,SAAO;AACX;AAlBS;AAmBT,uBAAuB,MAAM,UAAU;AACnC,MAAI,CAAC,QAAQ,CAAC,UAAU;AACpB,WAAO;EACV;AACD,MAAI,gBAAgB,gBAAgB;AAChC,QAAI,SAAS,SAAS,QAAQ;AAC1B,aAAO,CAAC,CAAC,UAAU,SAAS,2CAA2C,CAAC;AAAA,IAC3E;AACD,WAAO,cAAc,KAAK,QAAQ,QAAQ;AAAA,EAC7C;AACD,MAAI,SAAS,SAAS,QAAQ;AAC1B,WAAO;EACV;AACD,MAAI,gBAAgB,aAAa;AAC7B,UAAM,WAAW,KAAK;AACtB,QAAI,SAAS,SAAS,SAAS;AAC3B,YAAM,SAAS,SAAS,UAAU;AAClC,aAAO,OAAO,QAAQ,UAAQ,cAAc,UAAU,IAAI,CAAC;AAAA,IAC9D;AACD,WAAO,cAAc,UAAU,QAAQ;AAAA,EAC1C;AACD,MAAI,gBAAgB,wBAAwB;AACxC,QAAI,SAAS,SAAS,UAAU;AAC5B,aAAO,CAAC,CAAC,UAAU,SAAS,0BAA0B,CAAC;AAAA,IAC1D;AACD,UAAM,iBAAiB,uBAAO,OAAO,IAAI;AACzC,UAAM,cAAc,OAAO,SAAS,SAAS,YAAU;AACnD,UAAI;AACJ,YAAM,YAAa,MAAK,WAAW,QAAQ,WAAW,SAAS,SAAS,OAAO,SAAS,QAAQ,OAAO,SAAS,SAAS,GAAG;AAC5H,qBAAe,aAAa;AAC5B,YAAM,aAAa,KAAK,UAAW,EAAC;AACpC,UAAI,CAAC,YAAY;AACb,eAAO;AAAA,UACH;AAAA,YACI,OAAO;AAAA,YACP,SAAS,gCAAgC;AAAA,UAC5C;AAAA,QACrB;AAAA,MACa;AACD,YAAM,YAAY,aAAa,WAAW,OAAO;AACjD,aAAO,cAAc,WAAW,OAAO,KAAK;AAAA,IACxD,CAAS;AACD,WAAO,KAAK,KAAK,UAAS,CAAE,EAAE,QAAQ,eAAa;AAC/C,YAAM,QAAQ,KAAK,UAAW,EAAC;AAC/B,UAAI,CAAC,eAAe,cAChB,MAAM,gBAAgB,kBACtB,CAAC,MAAM,cAAc;AACrB,oBAAY,KAAK;AAAA,UACb;AAAA,UACA,mBAAmB,oCAAoC;AAAA,QAC3E,CAAiB;AAAA,MACJ;AAAA,IACb,CAAS;AACD,WAAO;AAAA,EACV;AACD,MAAK,KAAK,SAAS,aAAa,SAAS,SAAS,aAC7C,KAAK,SAAS,YAAY,SAAS,SAAS,YAC5C,KAAK,SAAS,QACX,SAAS,SAAS,YAClB,SAAS,SAAS,YACrB,KAAK,SAAS,WAAW,SAAS,SAAS,YAC3C,KAAK,SAAS,SACV,UAAS,SAAS,YAAa,UAAS,QAAQ,OAAO,SAAS,QAAS;AAC9E,WAAO,CAAC,CAAC,UAAU,2BAA2B,QAAQ,CAAC;AAAA,EAC1D;AACD,MAAK,iBAAgB,mBAAmB,gBAAgB,sBAClD,UAAS,SAAS,YAChB,SAAS,SAAS,YAClB,SAAS,SAAS,aAClB,SAAS,SAAS,UAClB,UAAU,KAAK,WAAW,SAAS,KAAK,CAAC,IAAI;AACjD,WAAO,CAAC,CAAC,UAAU,2BAA2B,QAAQ,CAAC;AAAA,EAC1D;AACD,SAAO;AACX;AA1ES;AA2ET,mBAAmB,QAAQ,MAAM,SAAS;AACtC,SAAO;AAAA,IACH;AAAA,IACA,UAAU;AAAA,IACV,MAAM;AAAA,IACN,MAAM,OAAO,aAAa,KAAK,KAAK;AAAA,IACpC,IAAI,OAAO,aAAa,KAAK,GAAG;AAAA,EACxC;AACA;AARS;AAST,mBAAmB,OAAO;AACtB,SAAO,UAAU,QAAQ,UAAU,UAAa,UAAU;AAC9D;AAFS;AAGT,gBAAgB,OAAO,QAAQ;AAC3B,SAAO,MAAM,UAAU,OAAO,MAAM,CAAE,GAAE,MAAM,IAAI,MAAM,CAAC;AAC7D;AAFS;"}